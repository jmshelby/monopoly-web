name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install Clojure CLI
      uses: DeLaGuardo/setup-clojure@12.1
      with:
        cli: 1.11.1.1413
        
    - name: Install dependencies
      run: npm install
      
    - name: Cache shadow-cljs
      uses: actions/cache@v4
      with:
        path: |
          ~/.m2/repository
          ~/.gitlibs
          .shadow-cljs
        key: ${{ runner.os }}-clojure-${{ hashFiles('**/deps.edn', '**/shadow-cljs.edn') }}
        restore-keys: |
          ${{ runner.os }}-clojure-
          
    - name: Lint code
      run: npm run lint
      
    - name: Run tests
      run: npm run test
      
    - name: Build application
      run: npm run build
      
    - name: Generate build report
      run: npm run build-report
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          resources/public/js/compiled/
          target/build-report.html

  deploy-github-pages:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    # Grant GITHUB_TOKEN the permissions required to deploy to Pages
    permissions:
      contents: read
      pages: write
      id-token: write
    
    # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
    # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
    concurrency:
      group: "pages"
      cancel-in-progress: false
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install Clojure CLI
      uses: DeLaGuardo/setup-clojure@12.1
      with:
        cli: 1.11.1.1413
        
    - name: Install dependencies
      run: npm install
      
    - name: Cache shadow-cljs
      uses: actions/cache@v4
      with:
        path: |
          ~/.m2/repository
          ~/.gitlibs
          .shadow-cljs
        key: ${{ runner.os }}-clojure-${{ hashFiles('**/deps.edn', '**/shadow-cljs.edn') }}
        restore-keys: |
          ${{ runner.os }}-clojure-
          
    - name: Build for GitHub Pages
      run: npm run deploy:github
      
    - name: Setup Pages
      uses: actions/configure-pages@v5
      with:
        enablement: true
      
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./docs
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4